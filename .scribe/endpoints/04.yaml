name: Products
description: |-

  API endpoints for managing products
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: |-

        API endpoints for managing products
      subgroup: ''
      subgroupDescription: ''
      title: 'Get products list'
      description: 'Retrieve a paginated list of products with advanced filtering and sorting options.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      country:
        name: country
        description: 'Optional country code (MY or SG) to filter products by pricing availability.'
        required: false
        example: MY
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of products per page. Default: 15.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: 'Optional category ID to filter products by category.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      price_from:
        name: price_from
        description: 'decimal Optional minimum price filter (in selected country currency).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      price_to:
        name: price_to
        description: 'decimal Optional maximum price filter (in selected country currency).'
        required: false
        example: 50
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Optional search term to filter products by name or description.'
        required: false
        example: Ethiopian
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_by:
        name: sort_by
        description: 'Optional sorting field. Options: name, price. Default: name.'
        required: false
        example: price
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_order:
        name: sort_order
        description: 'Optional sorting order. Options: asc, desc. Default: asc.'
        required: false
        example: desc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      country: MY
      per_page: 10
      category_id: 1
      price_from: 10
      price_to: 50
      search: Ethiopian
      sort_by: price
      sort_order: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Products retrieved successfully",
            "data": [
              {
                "id": 1,
                "name": "Ethiopian Light Roast",
                "description": "Bright and fruity single-origin beans.",
                "image_url": "ethiopian-light.jpg",
                "category_id": 1,
                "created_at": "2024-01-15T10:00:00.000000Z",
                "updated_at": "2024-01-15T10:00:00.000000Z",
                "image_full_url": "http://localhost/storage/products/ethiopian-light.jpg",
                "category": {
                  "id": 1,
                  "name": "Coffee Beans",
                  "description": "Premium coffee beans from around the world"
                },
                "prices": [
                  {
                    "id": 1,
                    "product_id": 1,
                    "country_code": "MY",
                    "price": "35.00",
                    "country": {
                      "code": "MY",
                      "name": "Malaysia",
                      "currency_code": "MYR"
                    }
                  }
                ]
              }
            ],
            "pagination": {
              "current_page": 1,
              "last_page": 1,
              "per_page": 15,
              "total": 3
            },
            "meta": {
              "filtered_country": "MY",
              "country_source": "session",
              "filters": {
                "category_id": 1,
                "price_from": 10.00,
                "price_to": 50.00,
                "search": "Ethiopian"
              },
              "sorting": {
                "sort_by": "price",
                "sort_order": "asc"
              }
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: |-

        API endpoints for managing products
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific product'
      description: 'Retrieve detailed information about a specific product with pricing for the specified country.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The product ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      country:
        name: country
        description: 'The country code for pricing (MY or SG). Default: MY.'
        required: false
        example: SG
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      country: SG
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Product retrieved successfully",
            "data": {
              "id": 1,
              "name": "Ethiopian Light Roast",
              "description": "Bright and fruity single-origin beans.",
              "image_url": "ethiopian-light.jpg",
              "category_id": 1,
              "created_at": "2024-01-15T10:00:00.000000Z",
              "updated_at": "2024-01-15T10:00:00.000000Z",
              "image_full_url": "http://localhost/storage/products/ethiopian-light.jpg",
              "category": {
                "id": 1,
                "name": "Coffee Beans",
                "description": "Premium coffee beans from around the world"
              },
              "prices": [
                {
                  "id": 2,
                  "product_id": 1,
                  "country_code": "SG",
                  "price": "15.00",
                  "country": {
                    "code": "SG",
                    "name": "Singapore",
                    "currency_code": "SGD"
                  }
                }
              ]
            },
            "meta": {
              "selected_country": "SG"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
