name: 'Shopping Cart'
description: |-

  API endpoints for managing shopping cart operations
endpoints:
  -
    httpMethods:
      - GET
    uri: api/cart
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: |-

        API endpoints for managing shopping cart operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Get cart contents'
      description: "Retrieve the current user's shopping cart with all items and pricing for the specified country."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      country:
        name: country
        description: 'The country code for pricing (MY or SG). Default: MY.'
        required: false
        example: SG
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      country: SG
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Cart retrieved successfully",
            "data": {
              "id": 1,
              "country_code": "MY",
              "total_quantity": 3,
              "total_price": 105.00,
              "cart_items": [
                {
                  "id": 1,
                  "quantity": 2,
                  "total_price": 70.00,
                  "formatted_total_price": "RM 70.00",
                  "product": {
                    "id": 1,
                    "name": "Ethiopian Light Roast",
                    "description": "Bright and fruity single-origin beans.",
                    "image_full_url": "http://localhost/storage/products/ethiopian-light.jpg",
                    "category": {
                      "id": 1,
                      "name": "Coffee Beans"
                    },
                    "current_price": {
                      "price": "35.00",
                      "currency_code": "MYR"
                    }
                  }
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Login required"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/cart/count
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: |-

        API endpoints for managing shopping cart operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Get cart count (for header display)'
      description: "Get the total number of items in the user's cart for display purposes."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Cart count retrieved successfully",
            "data": {
              "count": 3
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/cart/items
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: |-

        API endpoints for managing shopping cart operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Add item to cart'
      description: 'Add a product to the shopping cart or update quantity if item already exists.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_id:
        name: product_id
        description: 'The ID of the product to add.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'The quantity to add (1-99). Default: 1.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country:
        name: country
        description: 'The country code for pricing validation (MY or SG). Default: MY.'
        required: false
        example: SG
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_id: 1
      quantity: 2
      country: SG
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Item added to cart successfully",
            "data": {
              "cart_item": {
                "id": 1,
                "quantity": 2,
                "product_id": 1
              },
              "cart_summary": {
                "total_quantity": 3,
                "total_price": 105.00
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "success": false,
            "message": "Product not available in SG"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "product_id": ["The selected product id is invalid."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/cart/items/{id}'
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: |-

        API endpoints for managing shopping cart operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Update cart item quantity'
      description: 'Update the quantity of a specific cart item.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the item.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      itemId:
        name: itemId
        description: 'The ID of the cart item to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      itemId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      quantity:
        name: quantity
        description: 'The new quantity (1-99).'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      quantity: 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Cart item updated successfully",
            "data": {
              "cart_item": {
                "id": 1,
                "quantity": 3,
                "total_price": 105.00
              },
              "cart_summary": {
                "total_quantity": 5,
                "total_price": 175.00
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Cart item not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/cart/items/{id}'
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: |-

        API endpoints for managing shopping cart operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove item from cart'
      description: 'Remove a specific item from the shopping cart.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the item.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      itemId:
        name: itemId
        description: 'The ID of the cart item to remove.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      itemId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Item removed from cart successfully",
            "data": {
              "cart_summary": {
                "total_quantity": 2,
                "total_price": 70.00
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Cart item not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/cart
    metadata:
      groupName: 'Shopping Cart'
      groupDescription: |-

        API endpoints for managing shopping cart operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Clear cart'
      description: 'Remove all items from the shopping cart.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Cart cleared successfully",
            "data": {
              "cart_summary": {
                "total_quantity": 0,
                "total_price": 0
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Cart not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
